{"ast":null,"code":"const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\nconst saveFavoriteSongs = favoriteSongs => localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = response => callback => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\nexport const getFavoriteSongs = () => new Promise(resolve => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\nexport const addSong = song => new Promise(resolve => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\nexport const removeSong = song => new Promise(resolve => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter(s => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});","map":{"version":3,"names":["FAVORITE_SONGS_KEY","TIMEOUT","SUCCESS_STATUS","JSON","parse","localStorage","getItem","setItem","stringify","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","simulateRequest","response","callback","setTimeout","getFavoriteSongs","Promise","resolve","addSong","song","removeSong","filter","s","trackId"],"sources":["/Users/ruan/Desktop/Trybe/projetos/sd-029-a-project-trybetunes/src/services/favoriteSongsAPI.js"],"sourcesContent":["const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n"],"mappings":"AAAA,MAAMA,kBAAkB,GAAG,gBAAgB;AAC3C,MAAMC,OAAO,GAAG,GAAG;AACnB,MAAMC,cAAc,GAAG,IAAI;AAE3B,IAAI,CAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACN,kBAAkB,CAAC,CAAC,EAAE;EACzDK,YAAY,CAACE,OAAO,CAACP,kBAAkB,EAAEG,IAAI,CAACK,SAAS,CAAC,EAAE,CAAC,CAAC;AAC9D;AACA,MAAMC,iBAAiB,GAAG,MAAMN,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACN,kBAAkB,CAAC,CAAC;AAEpF,MAAMU,iBAAiB,GAAIC,aAAa,IAAKN,YAAY,CACtDE,OAAO,CAACP,kBAAkB,EAAEG,IAAI,CAACK,SAAS,CAACG,aAAa,CAAC,CAAC;;AAE7D;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,eAAe,GAAIC,QAAQ,IAAMC,QAAQ,IAAK;EAClDC,UAAU,CAAC,MAAM;IACfD,QAAQ,CAACD,QAAQ,CAAC;EACpB,CAAC,EAAEZ,OAAO,CAAC;AACb,CAAC;AAED,OAAO,MAAMe,gBAAgB,GAAG,MAAM,IAAIC,OAAO,CAAEC,OAAO,IAAK;EAC7D,MAAMP,aAAa,GAAGF,iBAAiB,EAAE;EACzCG,eAAe,CAACD,aAAa,CAAC,CAACO,OAAO,CAAC;AACzC,CAAC,CAAC;AAEF,OAAO,MAAMC,OAAO,GAAIC,IAAI,IAAK,IAAIH,OAAO,CAAEC,OAAO,IAAK;EACxD,IAAIE,IAAI,EAAE;IACR,MAAMT,aAAa,GAAGF,iBAAiB,EAAE;IACzCC,iBAAiB,CAAC,CAAC,GAAGC,aAAa,EAAES,IAAI,CAAC,CAAC;EAC7C;EACAR,eAAe,CAACV,cAAc,CAAC,CAACgB,OAAO,CAAC;AAC1C,CAAC,CAAC;AAEF,OAAO,MAAMG,UAAU,GAAID,IAAI,IAAK,IAAIH,OAAO,CAAEC,OAAO,IAAK;EAC3D,MAAMP,aAAa,GAAGF,iBAAiB,EAAE;EACzCC,iBAAiB,CAACC,aAAa,CAACW,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,OAAO,KAAKJ,IAAI,CAACI,OAAO,CAAC,CAAC;EAC1EZ,eAAe,CAACV,cAAc,CAAC,CAACgB,OAAO,CAAC;AAC1C,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}