{"ast":null,"code":"var _jsxFileName = \"/Users/ruan/Desktop/Trybe/projetos/sd-029-a-project-trybetunes/src/pages/Album.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\nimport '../style/Album.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.Remove = () => {};\n    this.state = {\n      Musics: [],\n      Name: '',\n      Collection: '',\n      Image: ''\n    };\n  }\n  async componentDidMount() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      }\n    } = this.props;\n    const response = await getMusics(id);\n    const response2 = response.slice(1, response.length);\n    this.setState({\n      Musics: response2,\n      Name: response[0].artistName,\n      Collection: response[0].collectionName,\n      Image: response[0].artworkUrl100\n    });\n  }\n  render() {\n    const {\n      Musics,\n      Name,\n      Collection,\n      Image\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"AlbumArtistContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"AlbumArtist\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Image,\n            alt: Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            \"data-testid\": \"artist-name\",\n            children: Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            \"data-testid\": \"album-name\",\n            children: Collection\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"Album\",\n          children: Musics.map(music => /*#__PURE__*/_jsxDEV(MusicCard, {\n            trackName: music.trackName,\n            previewUrl: music.previewUrl,\n            trackId: music.trackId,\n            Remove: () => this.Remove()\n          }, music.trackName, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n}\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  }).isRequired\n};\nexport default Album;","map":{"version":3,"names":["React","PropTypes","Header","getMusics","MusicCard","Album","Component","constructor","Remove","state","Musics","Name","Collection","Image","componentDidMount","match","params","id","props","response","response2","slice","length","setState","artistName","collectionName","artworkUrl100","render","map","music","trackName","previewUrl","trackId","propTypes","shape","string","isRequired"],"sources":["/Users/ruan/Desktop/Trybe/projetos/sd-029-a-project-trybetunes/src/pages/Album.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\nimport '../style/Album.css'\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      Musics: [],\n      Name: '',\n      Collection: '',\n      Image: '',\n    };\n  }\n\n  async componentDidMount() {\n    const { match: { params: { id } } } = this.props;\n    const response = await getMusics(id);\n    const response2 = response.slice(1, response.length);\n    this.setState({ Musics: response2,\n      Name: response[0].artistName,\n      Collection: response[0].collectionName,\n      Image: response[0].artworkUrl100,\n    });\n  }\n\n  Remove = () => {\n\n  };\n\n  render() {\n    const { Musics, Name, Collection, Image } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        <section className='AlbumArtistContent'>\n        <section className='AlbumArtist'>\n        <img src={Image} alt={Name}></img>\n        <span data-testid=\"artist-name\">{Name}</span>\n        <span data-testid=\"album-name\">{Collection}</span>\n        </section>\n        <section className='Album'>\n        {Musics.map((music) => (\n          <MusicCard\n            key={ music.trackName }\n            trackName={ music.trackName }\n            previewUrl={ music.previewUrl }\n            trackId={ music.trackId }\n            Remove={ () => this.Remove() }\n          />))}\n          </section>\n          </section>\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Album;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAO,oBAAoB;AAAA;AAE3B,MAAMC,KAAK,SAASL,KAAK,CAACM,SAAS,CAAC;EAClCC,WAAW,GAAG;IACZ,KAAK,EAAE;IAAC,KAqBVC,MAAM,GAAG,MAAM,CAEf,CAAC;IArBC,IAAI,CAACC,KAAK,GAAG;MACXC,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE,EAAE;MACRC,UAAU,EAAE,EAAE;MACdC,KAAK,EAAE;IACT,CAAC;EACH;EAEA,MAAMC,iBAAiB,GAAG;IACxB,MAAM;MAAEC,KAAK,EAAE;QAAEC,MAAM,EAAE;UAAEC;QAAG;MAAE;IAAE,CAAC,GAAG,IAAI,CAACC,KAAK;IAChD,MAAMC,QAAQ,GAAG,MAAMhB,SAAS,CAACc,EAAE,CAAC;IACpC,MAAMG,SAAS,GAAGD,QAAQ,CAACE,KAAK,CAAC,CAAC,EAAEF,QAAQ,CAACG,MAAM,CAAC;IACpD,IAAI,CAACC,QAAQ,CAAC;MAAEb,MAAM,EAAEU,SAAS;MAC/BT,IAAI,EAAEQ,QAAQ,CAAC,CAAC,CAAC,CAACK,UAAU;MAC5BZ,UAAU,EAAEO,QAAQ,CAAC,CAAC,CAAC,CAACM,cAAc;MACtCZ,KAAK,EAAEM,QAAQ,CAAC,CAAC,CAAC,CAACO;IACrB,CAAC,CAAC;EACJ;EAMAC,MAAM,GAAG;IACP,MAAM;MAAEjB,MAAM;MAAEC,IAAI;MAAEC,UAAU;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACJ,KAAK;IACtD,oBACE;MAAK,eAAY,YAAY;MAAA,wBAC3B,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV;QAAS,SAAS,EAAC,oBAAoB;QAAA,wBACvC;UAAS,SAAS,EAAC,aAAa;UAAA,wBAChC;YAAK,GAAG,EAAEI,KAAM;YAAC,GAAG,EAAEF;UAAK;YAAA;YAAA;YAAA;UAAA,QAAO,eAClC;YAAM,eAAY,aAAa;YAAA,UAAEA;UAAI;YAAA;YAAA;YAAA;UAAA,QAAQ,eAC7C;YAAM,eAAY,YAAY;YAAA,UAAEC;UAAU;YAAA;YAAA;YAAA;UAAA,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QACxC,eACV;UAAS,SAAS,EAAC,OAAO;UAAA,UACzBF,MAAM,CAACkB,GAAG,CAAEC,KAAK,iBAChB,QAAC,SAAS;YAER,SAAS,EAAGA,KAAK,CAACC,SAAW;YAC7B,UAAU,EAAGD,KAAK,CAACE,UAAY;YAC/B,OAAO,EAAGF,KAAK,CAACG,OAAS;YACzB,MAAM,EAAG,MAAM,IAAI,CAACxB,MAAM;UAAI,GAJxBqB,KAAK,CAACC,SAAS;YAAA;YAAA;YAAA;UAAA,QAKpB;QAAC;UAAA;UAAA;UAAA;QAAA,QACM;MAAA;QAAA;QAAA;QAAA;MAAA,QACA;IAAA;MAAA;MAAA;MAAA;IAAA,QACR;EAEV;AACF;AAEAzB,KAAK,CAAC4B,SAAS,GAAG;EAChBlB,KAAK,EAAEd,SAAS,CAACiC,KAAK,CAAC;IACrBlB,MAAM,EAAEf,SAAS,CAACiC,KAAK,CAAC;MACtBjB,EAAE,EAAEhB,SAAS,CAACkC;IAChB,CAAC;EACH,CAAC,CAAC,CAACC;AACL,CAAC;AAED,eAAe/B,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}