{"ast":null,"code":"var _jsxFileName = \"/Users/ruan/Desktop/Trybe/projetos/sd-029-a-project-trybetunes/src/pages/Album.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      Musics: [],\n      Name: '',\n      Collection: '',\n      TrackName: '',\n      previewURL: ''\n    };\n  }\n  async componentDidMount() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      }\n    } = this.props;\n    const response = await getMusics(id);\n    console.log(response);\n    console.log(response[0].trackName);\n    this.setState({\n      Musics: response,\n      Name: response[0].artistName,\n      Collection: response[0].collectionName,\n      TrackName: response[0].trackName,\n      previewURL: response[0].previewUrl\n    });\n  }\n  render() {\n    const {\n      Musics,\n      Name,\n      Collection,\n      TrackName,\n      previewURL\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        \"data-testid\": \"artist-name\",\n        children: Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"album-name\",\n        children: Collection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), Musics.map(music => /*#__PURE__*/_jsxDEV(MusicCard, {\n        TrackName: TrackName,\n        previewURL: previewURL\n      }, music.collectionName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n}\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  }).isRequired\n};\nexport default Album;","map":{"version":3,"names":["React","PropTypes","Header","getMusics","MusicCard","Album","Component","constructor","state","Musics","Name","Collection","TrackName","previewURL","componentDidMount","match","params","id","props","response","console","log","trackName","setState","artistName","collectionName","previewUrl","render","map","music","propTypes","shape","string","isRequired"],"sources":["/Users/ruan/Desktop/Trybe/projetos/sd-029-a-project-trybetunes/src/pages/Album.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      Musics: [],\n      Name: '',\n      Collection: '',\n      TrackName: '',\n      previewURL: '',\n    };\n  }\n\n  async componentDidMount() {\n    const { match: { params: { id } } } = this.props;\n    const response = await getMusics(id);\n    console.log(response);\n    console.log(response[0].trackName);\n    this.setState({ Musics: response,\n      Name: response[0].artistName,\n      Collection: response[0].collectionName,\n      TrackName: response[0].trackName,\n      previewURL: response[0].previewUrl });\n  }\n\n  render() {\n    const { Musics, Name, Collection, TrackName, previewURL } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        <h2 data-testid=\"artist-name\">{Name}</h2>\n        <p data-testid=\"album-name\">{Collection}</p>\n        {Musics.map((music) => (\n          <MusicCard\n            key={ music.collectionName }\n            TrackName={ TrackName }\n            previewURL={ previewURL }\n          />))}\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Album;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAEhD,MAAMC,KAAK,SAASL,KAAK,CAACM,SAAS,CAAC;EAClCC,WAAW,GAAG;IACZ,KAAK,EAAE;IAEP,IAAI,CAACC,KAAK,GAAG;MACXC,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE,EAAE;MACRC,UAAU,EAAE,EAAE;MACdC,SAAS,EAAE,EAAE;MACbC,UAAU,EAAE;IACd,CAAC;EACH;EAEA,MAAMC,iBAAiB,GAAG;IACxB,MAAM;MAAEC,KAAK,EAAE;QAAEC,MAAM,EAAE;UAAEC;QAAG;MAAE;IAAE,CAAC,GAAG,IAAI,CAACC,KAAK;IAChD,MAAMC,QAAQ,GAAG,MAAMhB,SAAS,CAACc,EAAE,CAAC;IACpCG,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CAAC,CAAC,CAACG,SAAS,CAAC;IAClC,IAAI,CAACC,QAAQ,CAAC;MAAEd,MAAM,EAAEU,QAAQ;MAC9BT,IAAI,EAAES,QAAQ,CAAC,CAAC,CAAC,CAACK,UAAU;MAC5Bb,UAAU,EAAEQ,QAAQ,CAAC,CAAC,CAAC,CAACM,cAAc;MACtCb,SAAS,EAAEO,QAAQ,CAAC,CAAC,CAAC,CAACG,SAAS;MAChCT,UAAU,EAAEM,QAAQ,CAAC,CAAC,CAAC,CAACO;IAAW,CAAC,CAAC;EACzC;EAEAC,MAAM,GAAG;IACP,MAAM;MAAElB,MAAM;MAAEC,IAAI;MAAEC,UAAU;MAAEC,SAAS;MAAEC;IAAW,CAAC,GAAG,IAAI,CAACL,KAAK;IACtE,oBACE;MAAK,eAAY,YAAY;MAAA,wBAC3B,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV;QAAI,eAAY,aAAa;QAAA,UAAEE;MAAI;QAAA;QAAA;QAAA;MAAA,QAAM,eACzC;QAAG,eAAY,YAAY;QAAA,UAAEC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAK,EAC3CF,MAAM,CAACmB,GAAG,CAAEC,KAAK,iBAChB,QAAC,SAAS;QAER,SAAS,EAAGjB,SAAW;QACvB,UAAU,EAAGC;MAAY,GAFnBgB,KAAK,CAACJ,cAAc;QAAA;QAAA;QAAA;MAAA,QAGzB,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAEV;AACF;AAEApB,KAAK,CAACyB,SAAS,GAAG;EAChBf,KAAK,EAAEd,SAAS,CAAC8B,KAAK,CAAC;IACrBf,MAAM,EAAEf,SAAS,CAAC8B,KAAK,CAAC;MACtBd,EAAE,EAAEhB,SAAS,CAAC+B;IAChB,CAAC;EACH,CAAC,CAAC,CAACC;AACL,CAAC;AAED,eAAe5B,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}