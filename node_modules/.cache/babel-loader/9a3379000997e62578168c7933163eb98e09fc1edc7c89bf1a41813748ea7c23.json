{"ast":null,"code":"var _jsxFileName = \"/Users/ruan/Desktop/Trybe/projetos/sd-029-a-project-trybetunes/src/components/MusicCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MusicCard extends React.Component {\n  constructor() {\n    super();\n    this.FavoriteSong = async _ref => {\n      let {\n        music,\n        trackId\n      } = _ref;\n      this.setState({\n        isLoading: true\n      });\n      await addSong(music);\n      this.setState(prevState => ({\n        dataList: [...prevState.dataList, trackId],\n        isLoading: false\n      }));\n      this.setState({\n        isLoading: false\n      });\n    };\n    this.state = {\n      isLoading: false,\n      dataList: []\n    };\n  }\n  async componentDidMount() {\n    const data = await getFavoriteSongs();\n    data.forEach(_ref2 => {\n      let {\n        trackId\n      } = _ref2;\n      this.setState(prevState => ({\n        dataList: [...prevState.dataList, trackId]\n      }));\n    });\n  }\n  render() {\n    const {\n      isLoading,\n      dataList\n    } = this.state;\n    const {\n      MusicsList,\n      album\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        \"data-testid\": \"artist-name\",\n        children: album.artistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"album-name\",\n        children: album.collectionName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 24\n      }, this), !isLoading && MusicsList.map((_ref3, index) => {\n        let {\n          previewUrl,\n          trackName,\n          trackId\n        } = _ref3;\n        return /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: trackName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n            \"data-testid\": \"audio-component\",\n            src: previewUrl,\n            controls: true,\n            children: [/*#__PURE__*/_jsxDEV(\"track\", {\n              kind: \"captions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), \"O seu navegador n\\xE3o suporta o elemento\", ' ', ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"audio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            \"data-testid\": `checkbox-music-${trackId}`,\n            children: [\"Favorita\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"favorites-songs\",\n              checked: dataList === null || dataList === void 0 ? void 0 : dataList.some(item => item === trackId),\n              onChange: () => this.FavoriteSong(MusicsList[index], trackId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, trackName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n}\nMusicCard.propTypes = {\n  MusicsList: PropTypes.string.isRequired,\n  album: PropTypes.string.isRequired\n};\nexport default MusicCard;","map":{"version":3,"names":["React","PropTypes","addSong","getFavoriteSongs","Loading","MusicCard","Component","constructor","FavoriteSong","music","trackId","setState","isLoading","prevState","dataList","state","componentDidMount","data","forEach","render","MusicsList","album","props","artistName","collectionName","map","index","previewUrl","trackName","some","item","propTypes","string","isRequired"],"sources":["/Users/ruan/Desktop/Trybe/projetos/sd-029-a-project-trybetunes/src/components/MusicCard.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\n\nclass MusicCard extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: false,\n      dataList: [],\n    };\n  }\n\n  async componentDidMount() {\n    const data = await getFavoriteSongs();\n    data.forEach(({ trackId }) => {\n      this.setState((prevState) => ({\n        dataList: [...prevState.dataList, trackId],\n      }));\n    });\n  }\n\n  FavoriteSong = async ({ music, trackId }) => {\n    this.setState({ isLoading: true });\n    await addSong(music);\n    this.setState((prevState) => ({\n      dataList: [...prevState.dataList, trackId],\n      isLoading: false,\n    }));\n    this.setState({ isLoading: false });\n  };\n\n  render() {\n    const { isLoading, dataList } = this.state;\n    const { MusicsList, album } = this.props;\n    return (\n      <section>\n        <h2 data-testid=\"artist-name\">{ album.artistName }</h2>\n        <p data-testid=\"album-name\">{ album.collectionName }</p>\n        { isLoading && <Loading />}\n        { !isLoading && MusicsList.map(({ previewUrl, trackName, trackId }, index) => (\n          <section key={ trackName }>\n            <h3>{ trackName }</h3>\n            <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n              <track kind=\"captions\" />\n              O seu navegador n√£o suporta o elemento\n              {' '}\n              {' '}\n              <code>audio</code>\n              .\n            </audio>\n            <label data-testid={ `checkbox-music-${trackId}` }>\n              Favorita\n              <input\n                type=\"checkbox\"\n                name=\"favorites-songs\"\n                checked={ dataList?.some((item) => item === trackId) }\n                onChange={ () => this.FavoriteSong(MusicsList[index], trackId) }\n              />\n            </label>\n\n          </section>))}\n      </section>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  MusicsList: PropTypes.string.isRequired,\n  album: PropTypes.string.isRequired,\n};\n\nexport default MusicCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}