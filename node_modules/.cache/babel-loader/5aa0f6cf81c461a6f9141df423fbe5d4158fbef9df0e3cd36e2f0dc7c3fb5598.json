{"ast":null,"code":"import _toConsumableArray from\"/Users/ruan/Desktop/Trybe/projetos/sd-029-a-project-trybetunes/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";var FAVORITE_SONGS_KEY='favorite_songs';var TIMEOUT=500;var SUCCESS_STATUS='OK';if(!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))){localStorage.setItem(FAVORITE_SONGS_KEY,JSON.stringify([]));}var readFavoriteSongs=function readFavoriteSongs(){return JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));};var saveFavoriteSongs=function saveFavoriteSongs(favoriteSongs){return localStorage.setItem(FAVORITE_SONGS_KEY,JSON.stringify(favoriteSongs));};// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\nvar simulateRequest=function simulateRequest(response){return function(callback){setTimeout(function(){callback(response);},TIMEOUT);};};export var getFavoriteSongs=function getFavoriteSongs(){return new Promise(function(resolve){var favoriteSongs=readFavoriteSongs();simulateRequest(favoriteSongs)(resolve);});};export var addSong=function addSong(song){return new Promise(function(resolve){if(song){var favoriteSongs=readFavoriteSongs();saveFavoriteSongs([].concat(_toConsumableArray(favoriteSongs),[song]));}simulateRequest(SUCCESS_STATUS)(resolve);});};export var removeSong=function removeSong(song){return new Promise(function(resolve){var favoriteSongs=readFavoriteSongs();saveFavoriteSongs(favoriteSongs.filter(function(s){return s.trackId!==song.trackId;}));simulateRequest(SUCCESS_STATUS)(resolve);});};","map":{"version":3,"names":["FAVORITE_SONGS_KEY","TIMEOUT","SUCCESS_STATUS","JSON","parse","localStorage","getItem","setItem","stringify","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","simulateRequest","response","callback","setTimeout","getFavoriteSongs","Promise","resolve","addSong","song","removeSong","filter","s","trackId"],"sources":["/Users/ruan/Desktop/Trybe/projetos/sd-029-a-project-trybetunes/src/services/favoriteSongsAPI.js"],"sourcesContent":["const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n"],"mappings":"4JAAA,GAAMA,mBAAkB,CAAG,gBAAgB,CAC3C,GAAMC,QAAO,CAAG,GAAG,CACnB,GAAMC,eAAc,CAAG,IAAI,CAE3B,GAAI,CAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACN,kBAAkB,CAAC,CAAC,CAAE,CACzDK,YAAY,CAACE,OAAO,CAACP,kBAAkB,CAAEG,IAAI,CAACK,SAAS,CAAC,EAAE,CAAC,CAAC,CAC9D,CACA,GAAMC,kBAAiB,CAAG,QAApBA,kBAAiB,SAASN,KAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACN,kBAAkB,CAAC,CAAC,GAEpF,GAAMU,kBAAiB,CAAG,QAApBA,kBAAiB,CAAIC,aAAa,QAAKN,aAAY,CACtDE,OAAO,CAACP,kBAAkB,CAAEG,IAAI,CAACK,SAAS,CAACG,aAAa,CAAC,CAAC,GAE7D;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMC,gBAAe,CAAG,QAAlBA,gBAAe,CAAIC,QAAQ,QAAK,UAACC,QAAQ,CAAK,CAClDC,UAAU,CAAC,UAAM,CACfD,QAAQ,CAACD,QAAQ,CAAC,CACpB,CAAC,CAAEZ,OAAO,CAAC,CACb,CAAC,GAED,MAAO,IAAMe,iBAAgB,CAAG,QAAnBA,iBAAgB,SAAS,IAAIC,QAAO,CAAC,SAACC,OAAO,CAAK,CAC7D,GAAMP,cAAa,CAAGF,iBAAiB,EAAE,CACzCG,eAAe,CAACD,aAAa,CAAC,CAACO,OAAO,CAAC,CACzC,CAAC,CAAC,GAEF,MAAO,IAAMC,QAAO,CAAG,QAAVA,QAAO,CAAIC,IAAI,QAAK,IAAIH,QAAO,CAAC,SAACC,OAAO,CAAK,CACxD,GAAIE,IAAI,CAAE,CACR,GAAMT,cAAa,CAAGF,iBAAiB,EAAE,CACzCC,iBAAiB,8BAAKC,aAAa,GAAES,IAAI,GAAE,CAC7C,CACAR,eAAe,CAACV,cAAc,CAAC,CAACgB,OAAO,CAAC,CAC1C,CAAC,CAAC,GAEF,MAAO,IAAMG,WAAU,CAAG,QAAbA,WAAU,CAAID,IAAI,QAAK,IAAIH,QAAO,CAAC,SAACC,OAAO,CAAK,CAC3D,GAAMP,cAAa,CAAGF,iBAAiB,EAAE,CACzCC,iBAAiB,CAACC,aAAa,CAACW,MAAM,CAAC,SAACC,CAAC,QAAKA,EAAC,CAACC,OAAO,GAAKJ,IAAI,CAACI,OAAO,GAAC,CAAC,CAC1EZ,eAAe,CAACV,cAAc,CAAC,CAACgB,OAAO,CAAC,CAC1C,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}